# -*- coding: utf-8 -*-
"""Recommendation_systems.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hR_bXo4ONhqJTktClRp3o4MaraFeJ3Fr
"""

url = 'https://raw.githubusercontent.com/vishwanathmankala24/Datasets/master/book.csv'

!pip install pandas
import pandas as pd
!pip install sklearn

df = pd.read_csv(url,encoding="Latin-1")

df.shape

df.columns

df

### Creating a Tfidf Vectorizer to remove all stop words
from sklearn.feature_extraction.text import TfidfVectorizer

df.isnull().sum()
## No null values are present in the dataset

df = df.rename(columns={"Book.Title": "bookname"})

tfidf = TfidfVectorizer(stop_words="english")

df

df = df.iloc[:,1:]
df

# Preparing the Tfidf matrix by fitting and transforming
#Transform a count matrix to a normalized tf or tf-idf representation
tfidf_matrix=tfidf.fit_transform(df["Book.Title"])

tfidf_matrix.shape

from sklearn.metrics.pairwise import linear_kernel

cosine_sim_matrix = linear_kernel(tfidf_matrix,tfidf_matrix)

df_index = pd.Series(df.index, index=df['Book.Title']).drop_duplicates()

df_index["Kids Say the Darndest Things"]

def get_df_recommendations(Name,topN):

  df_id = df_index[Name]
  cosine_scores = list(enumerate(cosine_sim_matrix[df_id]))
  cosine_scores = sorted(cosine_scores,key=lambda x:x[1], reverse = True)
  cosine_scores_10 = cosine_scores[0:topN+1]
  df_idx =       [i[0] for i in cosine_scores_10]
  df_scores =  [i[1] for i in cosine_scores_10]

  df_similar_show = pd.DataFrame(columns = ["name", "Score"])
  df_similar_show["name"] = df.loc[df_idx,"Book.Title"]
  df_similar_show["Score"] = df_scores
  df_similar_show.reset_index(inplace=True)
  df_similar_show.drop(["index"], axis = 1 , inplace = True)
  print (df_similar_show)

get_df_recommendations("The Mummies of Urumchi",topN=10)

