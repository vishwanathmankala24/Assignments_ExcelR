# -*- coding: utf-8 -*-
"""KNN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Afi8egpwomlH4XpEl7_-COvJPH8vNc_k
"""

url = 'https://raw.githubusercontent.com/srini1392/Self-Driving-Cars/master/glass.csv'

!pip install pandas 
!pip install numpy
!pip install sklearn

df = pd.read_csv(url)

df
df.columns
df['RI'].value_counts

df

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
train,test = train_test_split(df,test_size=0.2)

from sklearn.neighbors import KNeighborsClassifier as KNC

neigh = KNC(n_neighbors=3)

train0 = pd.DataFrame()

test0 = pd.DataFrame()

for i in range(3,26,2):
    tr = []
    te = []
    neigh = KNC(i)
    print(neigh)
    neigh.fit(train.iloc[:,:],train.iloc[:,10])
    train_acc = np.mean(neigh.predict(train.iloc[:,:])==train.iloc[:,10])
    print(train_acc)
    test_acc = np.mean(neigh.predict(test.iloc[:,:])==test.iloc[:,10])
    print(test_acc)
    train0=train0.append([train_acc])
    test0=test0.append([test_acc]

#############################################################################################

url1 = 'https://raw.githubusercontent.com/srini1392/Programming-in-C/master/Zoo.csv'

import pandas as pd
import numpy as np
zoo = pd.read_csv("url1")       
zoo=zoo.iloc[:,1:18]
from sklearn.model_selection import train_test_split
train,test = train_test_split(zoo,test_size = 0.3) 
train0 = pd.DataFrame()
test0 = pd.DataFrame()
# KNN using sklearn 
# Importing Knn algorithm from sklearn.neighbors
from sklearn.neighbors import KNeighborsClassifier as KNC
for i in range(3,26,2):
    tr = []
    te = []
    neigh = KNC(i)
    print(neigh)
    neigh.fit(train.iloc[:,:],train.iloc[:,16])
    train_acc = np.mean(neigh.predict(train.iloc[:,:])==train.iloc[:,16])
    print(train_acc)
    test_acc = np.mean(neigh.predict(test.iloc[:,:])==test.iloc[:,16])
    print(test_acc)
    train0=train0.append([train_acc])
    test0=test0.append([test_acc])